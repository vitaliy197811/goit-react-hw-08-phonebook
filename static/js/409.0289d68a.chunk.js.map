{"version":3,"file":"static/js/409.0289d68a.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactForm.module.css';\nimport { nanoid } from 'nanoid'\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nconst ContactForm = () => {\n    const [ name, setName ] = useState('');\n    const [ phone, setPhone ] = useState('');\n\n    const contacts = useSelector(state => state.contacts.items);\n    const dispatch = useDispatch();\n\n    const handleChange = e => {\n        switch (e.target.name) {\n            case 'name':\n                setName(e.target.value);\n                break;\n            case 'phone':\n                setPhone(e.target.value);\n                break;\n            default:\n                break;\n        }\n    };\n    \n    const handleSubmit = e => {\n        e.preventDefault();\n\n        const verificationContact = contacts.find(el => el.name.toLowerCase() === name.toLowerCase());\n\n        if (!verificationContact) {\n            resetForm();\n            return dispatch(addContact({ name, phone, id: nanoid(), }));\n        } else {\n            alert(`${name} is already in contacts`);\n        }\n    };\n\n    const resetForm = () => {\n        setName('');\n        setPhone('');\n    };\n\n    return (\n    <form className={css.contactForm} onSubmit={handleSubmit}>\n        <label className={css.label}>Name\n            <input\n                className={css.input}\n                type=\"text\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                name=\"name\"\n                value={name}\n                onChange={handleChange}\n                placeholder=\"Rosie Simpson\"\n            />\n        </label>\n        <label className={css.label}>Number\n            <input\n                className={css.input}\n                type=\"tel\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                name=\"phone\"\n                value={phone}\n                onChange={handleChange}\n                placeholder=\"459-12-56\"\n            />\n        </label>\n        <button type=\"submit\" className={css.button}>Add contact</button>\n    </form>\n    );\n}\n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"filter\":\"Filter_filter__vxThR\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/filter/filterSlice';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n    const filter = useSelector(state => state.filter);\n    const dispatch = useDispatch();\n\n    const onChange = e => dispatch(changeFilter(e.target.value));\n\n    return(\n        <label className={css.label}>\n            Find contact by name\n            <input\n                type=\"name\"\n                value={filter}\n                onChange={onChange}\n                className={css.filter}\n            />\n        </label>\n    )\n};\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"ContactItem_text__6hT0E\",\"button\":\"ContactItem_button__IRFBz\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactItem.module.css';\n\nconst ContactItem = ({ id, name, phone, onDeleteContact }) => (\n    <>\n        <p className={css.text}>{name}: {phone}</p>\n        <button \n            className={css.button} \n            type=\"submit\" \n            onClick={() => onDeleteContact(id)}>\n            Delete\n        </button>\n    </>\n    \n);\n\nContactItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"ContactList_contacts__jDmyV\",\"item\":\"ContactList_item__EZYHO\",\"loading\":\"ContactList_loading__QJfkF\",\"contactsList\":\"ContactList_contactsList__7leRd\"};","import { ThreeCircles } from  'react-loader-spinner'\n\nexport const Loader = () => {\n    return (\n        <>\n            <ThreeCircles\n                height=\"40\"\n                width=\"40\"\n                color=\"blue\"\n                wrapperStyle={{}}\n                wrapperClass=\"\"\n                visible={true}\n                ariaLabel=\"three-circles-rotating\"\n                outerCircleColor=\"\"\n                innerCircleColor=\"\"\n                middleCircleColor=\"\"\n            />\n        </>\n    );\n};\n\nexport default Loader;","import { useEffect } from 'react';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport css from './ContactList.module.css';\nimport Loader from 'components/Loader/Loader';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts, deleteContact } from 'redux/contacts/contactsOperations';\n\nconst ContactList = () => {\n    const contacts = useSelector(state => state.contacts.items);\n    const filterContacts = useSelector(state => state.filter);\n    const isLoading = useSelector(state => state.contacts.isLoading);\n    const dispatch = useDispatch();\n\n    const showVisibleContacts = () => (\n        contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filterContacts.toLowerCase())\n    ));\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n    \n    const visibleContacts = showVisibleContacts();\n    \n    const onDeleteContact = id => dispatch(deleteContact(id));\n\n    return(\n        <div className={css.contacts}>\n            {isLoading && (<div className={css.loading}>Loading...<Loader /></div>)}\n            <ul className={css.contactsList}>\n                {visibleContacts.map(({ id, name, phone }) => (\n                    <li key={id} className={css.item}>\n                        <ContactItem \n                            id={id} \n                            name={name} \n                            phone={phone} \n                            onDeleteContact={onDeleteContact} />\n                    </li>\n                ))}\n            </ul>\n        </div>\n        \n    )\n};\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"Contacts_phonebook__G9bQK\",\"title\":\"Contacts_title__LxdN4\",\"contacts\":\"Contacts_contacts__gVK0J\"};","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport css from './Contacts.module.css';\n\nconst Contacts = () => (\n    <div className={css.phonebook}>\n        <h2 className={css.title}>Phonebook</h2>\n        <ContactForm />\n        <h3 className={css.contacts}>Contacts</h3>\n        <Filter />\n        <ContactList />\n    </div>\n);\n\nexport default Contacts;"],"names":["useState","name","setName","phone","setPhone","contacts","useSelector","state","items","dispatch","useDispatch","handleChange","e","target","value","resetForm","className","css","onSubmit","preventDefault","find","el","toLowerCase","addContact","id","nanoid","alert","type","pattern","title","required","onChange","placeholder","filter","changeFilter","onDeleteContact","onClick","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","filterContacts","isLoading","useEffect","fetchContacts","visibleContacts","contact","includes","deleteContact","map"],"sourceRoot":""}